0x0000: 30f00a00000000000000   | irmovq $10,%rax # Register storing how many blocks of data to sort.
0x000a: 30fb0100000000000000   | irmovq $1, %r11
0x0014: 30f80800000000000000   | irmovq $8, %r8
                               | 
0x001e:                        | swapped:
0x001e: 30f20000000000000000   | irmovq $0, %rdx
0x0028: 2009                   | rrmovq %rax, %r9
0x002a: 61b9                   | subq %r11, %r9
0x002c: 30f69800000000000000   | irmovq data, %rsi
0x0036:                        |     loop:
0x0036: 50360000000000000000   |     mrmovq (%rsi), %rbx
0x0040: 50160800000000000000   |     mrmovq 8(%rsi), %rcx
0x004a: 203a                   |     rrmovq %rbx, %r10
0x004c: 611a                   |     subq %rcx, %r10
0x004e: 767000000000000000     |     jg swap
0x0057:                        |     end_swap:
0x0057: 6086                   |     addq %r8, %rsi
0x0059: 61b9                   |     subq %r11, %r9
0x005b: 743600000000000000     |     jne loop
0x0064: 6222                   | andq %rdx, %rdx
0x0066: 741e00000000000000     | jne swapped
0x006f: 00                     | halt    
                               | 
0x0070:                        | swap:
0x0070: 40360800000000000000   | rmmovq %rbx, 8(%rsi)
0x007a: 40160000000000000000   | rmmovq %rcx, (%rsi)
0x0084: 30f20100000000000000   | irmovq $1, %rdx
0x008e: 705700000000000000     | jmp end_swap
0x0097:                        | .align 8
0x0098:                        | data:
0x0098: 05                     | .quad 0x05
0x00a0: 0a                     | .quad 0x0a
0x00a8: 08                     | .quad 0x08
0x00b0: 02                     | .quad 0x02
0x00b8: 01                     | .quad 0x01
0x00c0: 03                     | .quad 0x03
0x00c8: 06                     | .quad 0x06
0x00d0: 04                     | .quad 0x04
0x00d8: 09                     | .quad 0x09
0x00e0: 07                     | .quad 0x07